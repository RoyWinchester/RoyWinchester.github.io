(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{179:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归","aria-hidden":"true"}},[s._v("#")]),s._v(" 递归")]),s._v(" "),a("p",[s._v("如果使用循环，程序的性能可能更高；")]),s._v(" "),a("p",[s._v("如果使用递归，程序可能更容易理解。")]),s._v(" "),a("p",[s._v("如何选择要看什么对你来说更重要。")]),s._v(" "),a("h1",{attrs:{id:"编写递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写递归","aria-hidden":"true"}},[s._v("#")]),s._v(" 编写递归")]),s._v(" "),a("p",[s._v("编写递归函数时，必须告诉他何时停止递归。正因如此，每个递归函数都有两个部分：基线条件和递归条件。")]),s._v(" "),a("p",[s._v("递归条件是指函数调用自己，基线条件则指的是函数不再调用自己。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fact")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("fact"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("递归指的是调用自己的函数。")]),s._v(" "),a("li",[s._v("每个递归函数都有两个条件")]),s._v(" "),a("li",[s._v("栈有两种操作：压入和弹出")]),s._v(" "),a("li",[s._v("所有函数调用都进入调用栈")]),s._v(" "),a("li",[s._v("调用栈可能很长，这将占用大量的内存")])])])}],!1,null,null,null);t.default=e.exports}}]);