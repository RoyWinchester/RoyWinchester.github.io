(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{198:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表","aria-hidden":"true"}},[t._v("#")]),t._v(" 列表")]),t._v(" "),a("p",[t._v("list.append(x) 添加一个元素\nlist.extend(iterable) 添加可迭代的所有元素\nlist.insert(i,x) 在i位置插入\nlist.remove(x) 移除第一个值为x的元素\nlist.pop([i]) 弹出[i]的最后一个元素\nlist.clear() 清空\nlist.index(x[, start[, end]]) 返回第一个x的索引\nlist.count() 返回x出现的次数\nlist.sort() 排序\nlist.reverse() 反转\nlist.copy() 相当于[:]浅拷贝")]),t._v(" "),a("h3",{attrs:{id:"作为栈使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作为栈使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 作为栈使用")]),t._v(" "),a("p",[t._v("list.append() list.pop()")]),t._v(" "),a("h3",{attrs:{id:"作为队列使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作为队列使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 作为队列使用")]),t._v(" "),a("p",[t._v("要调用"),a("code",[t._v("from collections import deque")])]),t._v(" "),a("p",[t._v("然后list.append() list.popleft()")]),t._v(" "),a("h1",{attrs:{id:"del"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#del","aria-hidden":"true"}},[t._v("#")]),t._v(" del")]),t._v(" "),a("p",[t._v("从左至右递归地删除每一个目标。")]),t._v(" "),a("h1",{attrs:{id:"元组和序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元组和序列","aria-hidden":"true"}},[t._v("#")]),t._v(" 元组和序列")]),t._v(" "),a("p",[t._v("一个元组由几个被逗号隔开的值组成，例如")]),t._v(" "),a("blockquote",[a("p",[t._v("t = (12345, 54321, 'hello!')\nu = t, (1, 2, 3, 4, 5)\nu的输出就是((12345, 54321, 'hello!'), (1, 2, 3, 4, 5))")])]),t._v(" "),a("p",[t._v("给元组中的一个单独元素赋值是不被允许的。")]),t._v(" "),a("p",[t._v("元组是 immutable （不可变的），其序列通常包含不同种类的元素，并且通过解包（这一节下面会解释）或者索引来访问（如果是 namedtuples 的话甚至还可以通过属性访问）。")]),t._v(" "),a("p",[t._v("列表是 mutable （可变的），并且列表中的元素一般是同种类型的，并且通过迭代访问。")]),t._v(" "),a("h1",{attrs:{id:"集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合","aria-hidden":"true"}},[t._v("#")]),t._v(" 集合")]),t._v(" "),a("p",[t._v("集合是由不重复元素组成的无序的集。")]),t._v(" "),a("p",[t._v("它的基本用法包括成员检测和消除重复元素。")]),t._v(" "),a("p",[t._v("集合对象也支持像 联合，交集，差集，对称差分等数学运算。")]),t._v(" "),a("p",[t._v("花括号或 set() 函数可以用来创建集合。注意：要创建一个空集合你只能用 set() 而不能用 {}，因为后者是创建一个空字典。")]),t._v(" "),a("p",[t._v("例如")]),t._v(" "),a("blockquote",[a("p",[t._v("a = set('abracadabra')\na的输出就是{'a', 'r', 'b', 'c', 'd'}")])]),t._v(" "),a("p",[t._v("集合对象也支持像 联合，交集，差集，对称差分等数学运算。")]),t._v(" "),a("p",[t._v("也支持推导式形式")]),t._v(" "),a("h1",{attrs:{id:"字典"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典","aria-hidden":"true"}},[t._v("#")]),t._v(" 字典")]),t._v(" "),a("p",[t._v("也就是所说的散列表。")]),t._v(" "),a("p",[t._v("字典是以 关键字 为索引的，关键字可以是任意不可变类型，通常是字符串或数字。")]),t._v(" "),a("p",[t._v("不多介绍，一个键:值对的集合。{}")]),t._v(" "),a("p",[t._v("list(d)会返回一个按插入次序排序的所有键的列表。")]),t._v(" "),a("p",[t._v("要检查字典中是否存在一个特定键，可以用"),a("code",[t._v("in")]),t._v("关键字")]),t._v(" "),a("h1",{attrs:{id:"循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环","aria-hidden":"true"}},[t._v("#")]),t._v(" 循环")]),t._v(" "),a("p",[t._v("当在字典中循环时，用 items() 方法可将关键字和对应的值同时取出")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dicts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("当在序列中循环时，用 enumerate() 函数可以将索引位置和其对应的值同时取出")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("enumerate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tic'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tac'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toe'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("当同时在两个或更多序列中循环时，可以用 zip() 函数将其内元素一一匹配。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" questions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quest'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'favorite color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" answers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lancelot'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'the holy grail'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("zip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("questions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" answers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'What is your {0}?  It is {1}.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nWhat "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" your name?  It "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" lancelot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nWhat "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" your quest?  It "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" the holy grail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nWhat "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" your favorite color?  It "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" blue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("当逆向循环一个序列时，先正向定位序列，然后调用 reversed() 函数")]),t._v(" "),a("p",[t._v("如果要按某个指定顺序循环一个序列，可以用 sorted() 函数，它可以在不改动原序列的基础上返回一个新的排好序的序列")]),t._v(" "),a("p",[t._v("有时可能会想在循环时修改列表内容，一般来说改为创建一个新列表是比较简单且安全的")])])}],!1,null,null,null);s.default=e.exports}}]);